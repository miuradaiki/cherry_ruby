# 正規表現
# https://rubular.com/

if "123-4567" =~ /\d{3}-\d{4}/
  puts "マッチしました"
else
  puts "マッチしませんでした"
end

# !~ マッチしなかった時にtrueを返す
"hello" !~ /\d{3}-\d{4}/ #=>true

# 正規表現のキャプチャを利用する
text = "私の誕生日は1997年1月4日です。"
m = /(\d+)年(\d+)月(\d+)日/.match(text)
p m[0] #=>"1997年1月4日"
p m[1] #=>"1997"
p m[2] #=>"1"
p m[3] #=>"4"
p m[1..3] #=>["1997", "1", "4"]

# 以下のように入れ替えても動作する
p m = text.match(/(\d+)年(\d+)月(\d+)日/)
# => #<MatchData "1997年1月4日" 1:"1997" 2:"1" 3:"4">

# キャプチャに名前をつける
m = /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/
# m[:year]のようにシンボルで名前を指定して呼び出すことができる

# =~演算子を使うと、キャプチャの名前をそのままローカル変数として使用できるようになる
# ただし正規表現リテラルを直接左辺に置く必要がある
if /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/ =~text
  puts "#{year}/#{month}/#{day}"
end

# scan
# 引数に渡した正規表現にマッチする部分を配列に入れて返す
p "123 456 789".scan(/\d+/) #=> ["123", "456", "789"]
